{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/portfolio/frontend/src/pages/Contact.js\";\nimport React from \"react\";\nimport { useForm, ErrorMessage } from \"react-hook-form\"; //css\n\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { mainTheme } from \"../components/css/Theme\";\nimport { StyledBackground } from \"../components/css/Background\";\nimport { StyledLinkButton } from \"../components/css/Link\";\nimport { StyledPageWrapper, StyledCenterContainer } from \"../components/css/Layout\";\nexport const Contact = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    validateCriteriaMode: \"all\"\n  });\n\n  const submit = async (data, e) => {\n    e.target.reset();\n    await fetch(window.location.origin, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(res => {\n      console.log(res);\n    }).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: mainTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledPageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledBackground, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledCenterContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledForm, {\n    onSubmit: handleSubmit(submit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledInputControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }, \"First Name\", /*#__PURE__*/React.createElement(StyledInput, {\n    ref: register({\n      required: {\n        value: true,\n        message: \"This is field is required\"\n      },\n      maxLength: {\n        value: 15,\n        message: \"please keep characters under 15\"\n      }\n    }),\n    name: \"firstName\",\n    id: \"firstName\",\n    placeHolder: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, ({\n    messages\n  }) => messages && Object.entries(messages).map(([type, message]) => /*#__PURE__*/React.createElement(StyledHelperText, {\n    key: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, message)))), /*#__PURE__*/React.createElement(StyledInputControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, \"Last Name\", /*#__PURE__*/React.createElement(StyledInput, {\n    ref: register({\n      required: {\n        value: true,\n        message: \"This is field is required\"\n      },\n      maxLength: {\n        value: 15,\n        message: \"please keep characters under 15\"\n      }\n    }),\n    name: \"lastName\",\n    id: \"lastName\",\n    placeHolder: \"Last Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, ({\n    messages\n  }) => messages && Object.entries(messages).map(([type, message]) => /*#__PURE__*/React.createElement(StyledHelperText, {\n    key: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, message)))), /*#__PURE__*/React.createElement(StyledInputControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, \"Email\", /*#__PURE__*/React.createElement(StyledInput, {\n    ref: register({\n      required: {\n        value: true,\n        message: \"This is field is required\"\n      },\n      maxLength: {\n        value: 40,\n        message: \"please keep characters under 40\"\n      },\n      pattern: {\n        value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        message: \"please use a valid email address\"\n      }\n    }),\n    name: \"email\",\n    id: \"email\",\n    placeHolder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, ({\n    messages\n  }) => messages && Object.entries(messages).map(([type, message]) => /*#__PURE__*/React.createElement(StyledHelperText, {\n    key: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, message)))), /*#__PURE__*/React.createElement(StyledInputControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, \"Message\", /*#__PURE__*/React.createElement(StyledInput, {\n    style: {\n      height: \"200px\"\n    },\n    as: \"textarea\",\n    ref: register({\n      required: {\n        value: true,\n        message: \"This is field is required\"\n      },\n      maxLength: {\n        value: 2000,\n        message: \"please keep characters under 2000\"\n      },\n      minLength: {\n        value: 20,\n        message: \"please keep message over 20 characters\"\n      }\n    }),\n    name: \"message\",\n    id: \"message\",\n    placeHolder: \"Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, ({\n    messages\n  }) => messages && Object.entries(messages).map(([type, message]) => /*#__PURE__*/React.createElement(StyledHelperText, {\n    key: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, message)))), /*#__PURE__*/React.createElement(StyledLinkButton, {\n    button: \"true\",\n    title: \"Submit\",\n    value: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  })))))));\n};\nconst StyledForm = styled.form`\n  box-shadow: 0px 0px 2px ${props => props.theme.primaryC},\n    0px 0px 5px ${props => props.theme.primaryC},\n    0px 0px 10px ${props => props.theme.primaryC},\n    0px 0px 30px ${props => props.theme.primaryC};\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 8px;\n  max-width: 100%;\n  padding: 3rem;\n`;\nconst StyledLabel = styled.label`\n  font-size: 1.2rem;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  font-family: ${props => props.theme.primaryF};\n  color: ${props => props.theme.primaryC};\n  width: inherit;\n`;\nconst StyledInputControl = styled.div`\n  width: 320px;\n  padding: 0.75rem 0;\n`;\nconst StyledInput = styled.input`\n  margin-top: 0.4rem;\n  font-size: 1.2rem;\n  padding: 0.25rem 0;\n  width: 100%;\n  border-radius: 4px;\n  border: none;\n  background-color: ${props => props.theme.thirdC};\n  font-family: ${props => props.theme.secondaryF};\n  color: #000000;\n  resize: none;\n  text-indent: 0.5rem;\n`;\nconst StyledHelperText = styled.p`\n  font-family: ${props => props.theme.primaryF};\n  color: #ff0000;\n  font-size: 0.8rem;\n`;","map":{"version":3,"sources":["/Users/aaron/portfolio/frontend/src/pages/Contact.js"],"names":["React","useForm","ErrorMessage","styled","ThemeProvider","mainTheme","StyledBackground","StyledLinkButton","StyledPageWrapper","StyledCenterContainer","Contact","register","handleSubmit","errors","validateCriteriaMode","submit","data","e","target","reset","fetch","window","location","origin","mode","method","headers","body","JSON","stringify","then","res","json","console","log","catch","err","error","required","value","message","maxLength","messages","Object","entries","map","type","pattern","height","minLength","StyledForm","form","props","theme","primaryC","StyledLabel","label","primaryF","StyledInputControl","div","StyledInput","input","thirdC","secondaryF","StyledHelperText","p"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm, ErrorMessage } from \"react-hook-form\";\n\n//css\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { mainTheme } from \"../components/css/Theme\";\nimport { StyledBackground } from \"../components/css/Background\";\nimport { StyledLinkButton } from \"../components/css/Link\";\nimport {\n  StyledPageWrapper,\n  StyledCenterContainer,\n} from \"../components/css/Layout\";\n\nexport const Contact = () => {\n  const { register, handleSubmit, errors } = useForm({\n    validateCriteriaMode: \"all\",\n  });\n\n  const submit = async (data, e) => {\n    e.target.reset();\n\n    await fetch(window.location.origin, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  return (\n    <>\n      <ThemeProvider theme={mainTheme}>\n        <StyledPageWrapper>\n          <StyledBackground>\n            <StyledCenterContainer>\n              <StyledForm onSubmit={handleSubmit(submit)}>\n                <StyledInputControl>\n                  <StyledLabel>\n                    First Name\n                    <StyledInput\n                      ref={register({\n                        required: {\n                          value: true,\n                          message: \"This is field is required\",\n                        },\n                        maxLength: {\n                          value: 15,\n                          message: \"please keep characters under 15\",\n                        },\n                      })}\n                      name=\"firstName\"\n                      id=\"firstName\"\n                      placeHolder=\"First Name\"\n                    />\n                  </StyledLabel>\n                  <ErrorMessage errors={errors} name=\"firstName\">\n                    {({ messages }) =>\n                      messages &&\n                      Object.entries(messages).map(([type, message]) => (\n                        <StyledHelperText key={type}>\n                          {message}\n                        </StyledHelperText>\n                      ))\n                    }\n                  </ErrorMessage>\n                </StyledInputControl>\n\n                <StyledInputControl>\n                  <StyledLabel>\n                    Last Name\n                    <StyledInput\n                      ref={register({\n                        required: {\n                          value: true,\n                          message: \"This is field is required\",\n                        },\n                        maxLength: {\n                          value: 15,\n                          message: \"please keep characters under 15\",\n                        },\n                      })}\n                      name=\"lastName\"\n                      id=\"lastName\"\n                      placeHolder=\"Last Name\"\n                    />\n                  </StyledLabel>\n                  <ErrorMessage errors={errors} name=\"lastName\">\n                    {({ messages }) =>\n                      messages &&\n                      Object.entries(messages).map(([type, message]) => (\n                        <StyledHelperText key={type}>\n                          {message}\n                        </StyledHelperText>\n                      ))\n                    }\n                  </ErrorMessage>\n                </StyledInputControl>\n\n                <StyledInputControl>\n                  <StyledLabel>\n                    Email\n                    <StyledInput\n                      ref={register({\n                        required: {\n                          value: true,\n                          message: \"This is field is required\",\n                        },\n                        maxLength: {\n                          value: 40,\n                          message: \"please keep characters under 40\",\n                        },\n                        pattern: {\n                          value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                          message: \"please use a valid email address\",\n                        },\n                      })}\n                      name=\"email\"\n                      id=\"email\"\n                      placeHolder=\"Email\"\n                    />\n                  </StyledLabel>\n                  <ErrorMessage errors={errors} name=\"email\">\n                    {({ messages }) =>\n                      messages &&\n                      Object.entries(messages).map(([type, message]) => (\n                        <StyledHelperText key={type}>\n                          {message}\n                        </StyledHelperText>\n                      ))\n                    }\n                  </ErrorMessage>\n                </StyledInputControl>\n\n                <StyledInputControl>\n                  <StyledLabel>\n                    Message\n                    <StyledInput\n                      style={{ height: \"200px\" }}\n                      as=\"textarea\"\n                      ref={register({\n                        required: {\n                          value: true,\n                          message: \"This is field is required\",\n                        },\n                        maxLength: {\n                          value: 2000,\n                          message: \"please keep characters under 2000\",\n                        },\n                        minLength: {\n                          value: 20,\n                          message: \"please keep message over 20 characters\",\n                        },\n                      })}\n                      name=\"message\"\n                      id=\"message\"\n                      placeHolder=\"Message\"\n                    />\n                  </StyledLabel>\n                  <ErrorMessage errors={errors} name=\"message\">\n                    {({ messages }) =>\n                      messages &&\n                      Object.entries(messages).map(([type, message]) => (\n                        <StyledHelperText key={type}>\n                          {message}\n                        </StyledHelperText>\n                      ))\n                    }\n                  </ErrorMessage>\n                </StyledInputControl>\n\n                <StyledLinkButton\n                  button=\"true\"\n                  title=\"Submit\"\n                  value=\"submit\"\n                  type=\"submit\"\n                ></StyledLinkButton>\n              </StyledForm>\n            </StyledCenterContainer>\n          </StyledBackground>\n        </StyledPageWrapper>\n      </ThemeProvider>\n    </>\n  );\n};\n\nconst StyledForm = styled.form`\n  box-shadow: 0px 0px 2px ${(props) => props.theme.primaryC},\n    0px 0px 5px ${(props) => props.theme.primaryC},\n    0px 0px 10px ${(props) => props.theme.primaryC},\n    0px 0px 30px ${(props) => props.theme.primaryC};\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 8px;\n  max-width: 100%;\n  padding: 3rem;\n`;\n\nconst StyledLabel = styled.label`\n  font-size: 1.2rem;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  font-family: ${(props) => props.theme.primaryF};\n  color: ${(props) => props.theme.primaryC};\n  width: inherit;\n`;\n\nconst StyledInputControl = styled.div`\n  width: 320px;\n  padding: 0.75rem 0;\n`;\n\nconst StyledInput = styled.input`\n  margin-top: 0.4rem;\n  font-size: 1.2rem;\n  padding: 0.25rem 0;\n  width: 100%;\n  border-radius: 4px;\n  border: none;\n  background-color: ${(props) => props.theme.thirdC};\n  font-family: ${(props) => props.theme.secondaryF};\n  color: #000000;\n  resize: none;\n  text-indent: 0.5rem;\n`;\n\nconst StyledHelperText = styled.p`\n  font-family: ${(props) => props.theme.primaryF};\n  color: #ff0000;\n  font-size: 0.8rem;\n`;\n"]},"metadata":{},"sourceType":"module"}